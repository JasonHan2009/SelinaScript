Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS expression
Rule 2     expression -> expression MINUS expression
Rule 3     expression -> expression TIMES expression
Rule 4     expression -> expression DIVIDE expression
Rule 5     expression -> MINUS expression
Rule 6     expression -> LPAREN expression RPAREN
Rule 7     expression -> NUMBER
Rule 8     expression -> STR
Rule 9     expression -> CHAR
Rule 10    datatype -> DATATYPE expression
Rule 11    expression -> PRINT STR
Rule 12    expression -> PRINT CHAR
Rule 13    expression -> PRINT NUMBER
Rule 14    expression -> PRINT expression

Terminals, with rules where they appear

CHAR                 : 9 12
DATATYPE             : 10
DIVIDE               : 4
LPAREN               : 6
MINUS                : 2 5
NUMBER               : 7 13
PLUS                 : 1
PRINT                : 11 12 13 14
RPAREN               : 6
STR                  : 8 11
TIMES                : 3
error                : 

Nonterminals, with rules where they appear

datatype             : 
expression           : 1 1 2 2 3 3 4 4 5 6 10 14 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 2

    (5) expression -> MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 12

state 3

    (6) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 13

state 4

    (7) expression -> NUMBER .

    PLUS            reduce using rule 7 (expression -> NUMBER .)
    MINUS           reduce using rule 7 (expression -> NUMBER .)
    TIMES           reduce using rule 7 (expression -> NUMBER .)
    DIVIDE          reduce using rule 7 (expression -> NUMBER .)
    $end            reduce using rule 7 (expression -> NUMBER .)
    RPAREN          reduce using rule 7 (expression -> NUMBER .)


state 5

    (8) expression -> STR .

    PLUS            reduce using rule 8 (expression -> STR .)
    MINUS           reduce using rule 8 (expression -> STR .)
    TIMES           reduce using rule 8 (expression -> STR .)
    DIVIDE          reduce using rule 8 (expression -> STR .)
    $end            reduce using rule 8 (expression -> STR .)
    RPAREN          reduce using rule 8 (expression -> STR .)


state 6

    (9) expression -> CHAR .

    PLUS            reduce using rule 9 (expression -> CHAR .)
    MINUS           reduce using rule 9 (expression -> CHAR .)
    TIMES           reduce using rule 9 (expression -> CHAR .)
    DIVIDE          reduce using rule 9 (expression -> CHAR .)
    $end            reduce using rule 9 (expression -> CHAR .)
    RPAREN          reduce using rule 9 (expression -> CHAR .)


state 7

    (11) expression -> PRINT . STR
    (12) expression -> PRINT . CHAR
    (13) expression -> PRINT . NUMBER
    (14) expression -> PRINT . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    STR             shift and go to state 14
    CHAR            shift and go to state 15
    NUMBER          shift and go to state 16
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    PRINT           shift and go to state 7

    expression                     shift and go to state 17

state 8

    (1) expression -> expression PLUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 18

state 9

    (2) expression -> expression MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 19

state 10

    (3) expression -> expression TIMES . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 20

state 11

    (4) expression -> expression DIVIDE . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . MINUS expression
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . NUMBER
    (8) expression -> . STR
    (9) expression -> . CHAR
    (11) expression -> . PRINT STR
    (12) expression -> . PRINT CHAR
    (13) expression -> . PRINT NUMBER
    (14) expression -> . PRINT expression

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 3
    NUMBER          shift and go to state 4
    STR             shift and go to state 5
    CHAR            shift and go to state 6
    PRINT           shift and go to state 7

    expression                     shift and go to state 21

state 12

    (5) expression -> MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 5 (expression -> MINUS expression .)
    MINUS           reduce using rule 5 (expression -> MINUS expression .)
    TIMES           reduce using rule 5 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 5 (expression -> MINUS expression .)
    $end            reduce using rule 5 (expression -> MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 13

    (6) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 22
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 14

    (11) expression -> PRINT STR .
    (8) expression -> STR .

  ! reduce/reduce conflict for PLUS resolved using rule 8 (expression -> STR .)
  ! reduce/reduce conflict for MINUS resolved using rule 8 (expression -> STR .)
  ! reduce/reduce conflict for TIMES resolved using rule 8 (expression -> STR .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 8 (expression -> STR .)
  ! reduce/reduce conflict for $end resolved using rule 8 (expression -> STR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (expression -> STR .)
    PLUS            reduce using rule 8 (expression -> STR .)
    MINUS           reduce using rule 8 (expression -> STR .)
    TIMES           reduce using rule 8 (expression -> STR .)
    DIVIDE          reduce using rule 8 (expression -> STR .)
    $end            reduce using rule 8 (expression -> STR .)
    RPAREN          reduce using rule 8 (expression -> STR .)

  ! PLUS            [ reduce using rule 11 (expression -> PRINT STR .) ]
  ! MINUS           [ reduce using rule 11 (expression -> PRINT STR .) ]
  ! TIMES           [ reduce using rule 11 (expression -> PRINT STR .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> PRINT STR .) ]
  ! $end            [ reduce using rule 11 (expression -> PRINT STR .) ]
  ! RPAREN          [ reduce using rule 11 (expression -> PRINT STR .) ]


state 15

    (12) expression -> PRINT CHAR .
    (9) expression -> CHAR .

  ! reduce/reduce conflict for PLUS resolved using rule 9 (expression -> CHAR .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (expression -> CHAR .)
  ! reduce/reduce conflict for TIMES resolved using rule 9 (expression -> CHAR .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 9 (expression -> CHAR .)
  ! reduce/reduce conflict for $end resolved using rule 9 (expression -> CHAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (expression -> CHAR .)
    PLUS            reduce using rule 9 (expression -> CHAR .)
    MINUS           reduce using rule 9 (expression -> CHAR .)
    TIMES           reduce using rule 9 (expression -> CHAR .)
    DIVIDE          reduce using rule 9 (expression -> CHAR .)
    $end            reduce using rule 9 (expression -> CHAR .)
    RPAREN          reduce using rule 9 (expression -> CHAR .)

  ! PLUS            [ reduce using rule 12 (expression -> PRINT CHAR .) ]
  ! MINUS           [ reduce using rule 12 (expression -> PRINT CHAR .) ]
  ! TIMES           [ reduce using rule 12 (expression -> PRINT CHAR .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> PRINT CHAR .) ]
  ! $end            [ reduce using rule 12 (expression -> PRINT CHAR .) ]
  ! RPAREN          [ reduce using rule 12 (expression -> PRINT CHAR .) ]


state 16

    (13) expression -> PRINT NUMBER .
    (7) expression -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 7 (expression -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (expression -> NUMBER .)
  ! reduce/reduce conflict for TIMES resolved using rule 7 (expression -> NUMBER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 7 (expression -> NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 7 (expression -> NUMBER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (expression -> NUMBER .)
    PLUS            reduce using rule 7 (expression -> NUMBER .)
    MINUS           reduce using rule 7 (expression -> NUMBER .)
    TIMES           reduce using rule 7 (expression -> NUMBER .)
    DIVIDE          reduce using rule 7 (expression -> NUMBER .)
    $end            reduce using rule 7 (expression -> NUMBER .)
    RPAREN          reduce using rule 7 (expression -> NUMBER .)

  ! PLUS            [ reduce using rule 13 (expression -> PRINT NUMBER .) ]
  ! MINUS           [ reduce using rule 13 (expression -> PRINT NUMBER .) ]
  ! TIMES           [ reduce using rule 13 (expression -> PRINT NUMBER .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> PRINT NUMBER .) ]
  ! $end            [ reduce using rule 13 (expression -> PRINT NUMBER .) ]
  ! RPAREN          [ reduce using rule 13 (expression -> PRINT NUMBER .) ]


state 17

    (14) expression -> PRINT expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 14 (expression -> PRINT expression .)
    RPAREN          reduce using rule 14 (expression -> PRINT expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! PLUS            [ reduce using rule 14 (expression -> PRINT expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> PRINT expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> PRINT expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> PRINT expression .) ]


state 18

    (1) expression -> expression PLUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 1 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 1 (expression -> expression PLUS expression .)
    $end            reduce using rule 1 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]


state 19

    (2) expression -> expression MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 2 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 2 (expression -> expression MINUS expression .)
    $end            reduce using rule 2 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]


state 20

    (3) expression -> expression TIMES expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 3 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 3 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 3 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 3 (expression -> expression TIMES expression .)
    $end            reduce using rule 3 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 3 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 21

    (4) expression -> expression DIVIDE expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 4 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 4 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 4 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 4 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 4 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 4 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 22

    (6) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 6 (expression -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 17 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 17 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (expression -> STR)
WARNING: rejected rule (expression -> PRINT STR) in state 14
WARNING: reduce/reduce conflict in state 15 resolved using rule (expression -> CHAR)
WARNING: rejected rule (expression -> PRINT CHAR) in state 15
WARNING: reduce/reduce conflict in state 16 resolved using rule (expression -> NUMBER)
WARNING: rejected rule (expression -> PRINT NUMBER) in state 16
WARNING: Rule (expression -> PRINT STR) is never reduced
WARNING: Rule (expression -> PRINT CHAR) is never reduced
WARNING: Rule (expression -> PRINT NUMBER) is never reduced
